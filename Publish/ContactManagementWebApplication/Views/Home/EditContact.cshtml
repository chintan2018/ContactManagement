@using ContactModel.POCOClasses
@model Contact

<div class="modal-content" style="width:500px !important; margin:10px auto !important;">
    @using (Html.BeginForm("EditContact", "Home", FormMethod.Post, new { id = "EditForm" }))
    {
        <div class="modal-header">
            <h4>Edit Contact</h4> <button id="modal-close-button" type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="alert alert-success" id="successMessage" style="display:none">
        </div>
        <div class="alert alert-warning" id="errorMessage" style="display:none">
        </div>
        <div class="form-group modal-body">
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                <label for="firstName">First Name:</label>
                @Html.TextBoxFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
            <div class="form-group">
                <label for="firstName">Last Name:</label>
                @Html.TextBoxFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                @Html.TextBoxFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="form-group">
                <label for="phoneNumber">Phone Number:</label>
                @Html.TextBoxFor(model => model.PhoneNumber)
                @Html.ValidationMessageFor(model => model.PhoneNumber)
            </div>
            <div class="form-group">
                <label for="optradio">Status:</label>
                @{
                    bool ActiveChecked = false;
                    bool InActiveChecked = true;
                    if (Model.Status == "Active")
                    {
                        ActiveChecked = true;
                        InActiveChecked = false;
                    }
                }


                @Html.RadioButton("Status", "Active", ActiveChecked) @Html.Label("Active")
                @Html.RadioButton("Status", "InActive", InActiveChecked) @Html.Label("InActive")
            </div>
        </div>
        <div class="modal-footer">
            <input type="button" id="btnSubmit" class="btn btn-info" value="Submit" />
            <input type="button" id="btnCancel" class="btn" value="Cancel" />
        </div>
    }
</div>
<script type="text/javascript">

    $(document).ready(
        function () {
            document.getElementById('errorMessage').innerHTML = '';
            $('#errorMessage').css('display', 'none');
            $('#successMessage').css('display', 'none');
        }
    );

    $(function () {

        function EditContact() {
            debugger;
            var contact = {};
            contact.FirstName = $("#FirstName").val();
            contact.LastName = $("#LastName").val();
            contact.Email = $("#Email").val();
            contact.PhoneNumber = $("#PhoneNumber").val();
            contact.Status = $('input[name=Status]:checked', '#EditForm').val();
            contact.UpdatedBy = "user"; //TODO:need to fetch logged in user name

            $.ajax({
                url: "http://localhost/contactmanagement/api/contact/" + $("#Id").val(),
                type: "PUT",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(contact),
                dataType: "json",
                success: function (response) {
                    $('#addModal').modal('hide');
                    location.reload(true);
                },

                error: function (x, e) {
                    $('#errorMessage').css('display', 'block');
                    CreateValidationMessage(x, "contact.FirstName");
                    CreateValidationMessage(x, "contact.LastName");
                    CreateValidationMessage(x, "contact.Email");
                    CreateValidationMessage(x, "contact.PhoneNumber");
                }
            });
        }

        function CreateValidationMessage(x, fieldName) {
            if (x.responseJSON.ModelState[fieldName] !== undefined) {

                for (var i = 0; i < x.responseJSON.ModelState[fieldName].length; i++) {
                    document.getElementById('errorMessage').innerHTML += '<h6>' + x.responseJSON.ModelState[fieldName][i] + '</h6>';
                }

            }
        }

        $('#btnSubmit').click(
            function () {
                document.getElementById('errorMessage').innerHTML = '';
                EditContact();
                e.preventDefault();
            }
        );

        $('#btnCancel').click(
            function () {
                document.getElementById('errorMessage').innerHTML = '';
                $('#addModal').modal('hide');
                e.preventDefault();
            }
        );
    })
</script>

